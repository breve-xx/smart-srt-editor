package ui

import (
    "dev.codecrunchiness/smart-srt-editor/internal/editor/ctx"
	"strings"
	"strconv"
)

templ Listing(session *ctx.Session) {
    <h1>Listing</h1>
    <p>Here is the file you requested:</p>
    <pre>{ session.File.Filename }</pre>
    <button onclick={ templ.JSFuncCall("download", session.ID) }>Download Edited Subtitles</button>
    <table>
        <thead>
            <tr>
                <th>#</th>
                <th>Start</th>
                <th>End</th>
                <th>Old</th>
                <th>New</th>
                <th>Edit</th>
            </tr>
        </thead>
        <tbody>
            for index, sub := range session.Subs.Captions {
                <tr>
                    <td>{ strconv.Itoa(sub.Seq) }</td>
                    <td>{ sub.Start.String() }</td>
                    <td>{ sub.End.String() }</td>
                    <td>{ strings.Join(sub.Text, "#separator#") }</td>
                    <td><textarea /></td>
                    <td><button onclick={ templ.JSFuncCall("save", session.ID, sub.Seq, index) }>Save</button></td>
                </tr>
            }
        </tbody>
    </table>
    <script>
        function download(sessionID) {
            fetch('/download', {
                method: 'GET',
                headers: {
                    'Authorization': `Bearer ${sessionID}`,
                }
            })
            .then(response => response.blob())
            .then(blob => {
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.style.display = 'none';
                a.href = url;
                a.download = 'edited.srt';
                document.body.appendChild(a);
                a.click();
                a.remove();
                window.URL.revokeObjectURL(url);
            });
        }

        function save(sessionID, seq, index) {
            fetch(`/edit/${index}`, {
                method: 'PUT',
                headers: {
                    'Authorization': `Bearer ${sessionID}`,
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    seq: seq,
                    text: ["new", "text"],
                }),
            });
        }
    </script>
}